import { ssrRenderAttrs, ssrRenderAttr, ssrRenderStyle } from "vue/server-renderer";
import { useSSRContext } from "vue";
import { _ as _export_sfc } from "./plugin-vue_export-helper.cc2b3d55.js";
const _imports_0 = "/assets/image.9b39615e.jpg";
const _imports_1 = "/assets/image-1.2eb8bfbf.jpg";
const __pageData = JSON.parse('{"title":"CSS","description":"","frontmatter":{},"headers":[],"relativePath":"blog/notes/CSS基础知识.md","filePath":"blog/notes/CSS基础知识.md","lastUpdated":1701534178000}');
const _sfc_main = { name: "blog/notes/CSS基础知识.md" };
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(_attrs)}><h1 id="css" tabindex="-1">CSS <a class="header-anchor" href="#css" aria-label="Permalink to &quot;CSS&quot;">​</a></h1><p>CSS 层叠样式表（Cascading Style Sheets）</p><h2 id="冲突规则" tabindex="-1">冲突规则 <a class="header-anchor" href="#冲突规则" aria-label="Permalink to &quot;冲突规则&quot;">​</a></h2><h3 id="层叠与继承" tabindex="-1">层叠与继承 <a class="header-anchor" href="#层叠与继承" aria-label="Permalink to &quot;层叠与继承&quot;">​</a></h3><p>样式表层叠，简单的说就是 CSS 的规则顺序很重要，当两条同级别的规则应用到同一个元素时，写在后面的就是实际使用的规则</p><h3 id="优先级" tabindex="-1">优先级 <a class="header-anchor" href="#优先级" aria-label="Permalink to &quot;优先级&quot;">​</a></h3><p>浏览器根据优先级来决定使用哪条规则，优先级高的规则会覆盖优先级低的规则</p><h3 id="继承" tabindex="-1">继承 <a class="header-anchor" href="#继承" aria-label="Permalink to &quot;继承&quot;">​</a></h3><p>继承需要在上下文中理解，一些设置在父级元素上的 CSS 是可以被子元素继承的，有些则不能比如 <code>width</code>、<code>padding</code>、<code>margin</code>、<code>border</code></p><p>更多的信息可以在查看属性的形式定义，比如 <code>color</code> 的形式定义如下： <img${ssrRenderAttr("src", _imports_0)} alt="Alt text"></p><h2 id="理解继承" tabindex="-1">理解继承 <a class="header-anchor" href="#理解继承" aria-label="Permalink to &quot;理解继承&quot;">​</a></h2><p>继承可以通过常识去判断，比如如果每个元素都继承了 <code>width</code> 那么 CSS 将会变得非常难用；如果每个元素都继承 <code>border</code> 这不会是我们想要的效果。</p><h3 id="控制继承" tabindex="-1">控制继承 <a class="header-anchor" href="#控制继承" aria-label="Permalink to &quot;控制继承&quot;">​</a></h3><p>CSS 提供了五个通用属性值来控制继承，每个 CSS 属性都接收这些值。</p><p><code>inherit</code>：继承父元素的值<br><code>initial</code>：使用属性的默认值<br><code>revert</code>：使用浏览器的默认样式，多数情况下类似于 <code>unset</code><br><code>revert-layer</code>：使用上一个层叠层中的值。 <code>unset</code>：将属性重置为自然值，如果属性是继承的，则相当于 <code>inherit</code>，否则相当于 <code>initial</code>。</p><h3 id="重设所有属性值" tabindex="-1">重设所有属性值 <a class="header-anchor" href="#重设所有属性值" aria-label="Permalink to &quot;重设所有属性值&quot;">​</a></h3><p>可以通过简写属性 <code>all</code> 来重设所有属性值，比如:</p><div class="language-CSS"><button title="Copy Code" class="copy"></button><span class="lang">CSS</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#FFCB6B" })}">div</span><span style="${ssrRenderStyle({ "color": "#BABED8" })}"> </span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">{</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#BABED8" })}">  </span><span style="${ssrRenderStyle({ "color": "#B2CCD6" })}">all</span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">:</span><span style="${ssrRenderStyle({ "color": "#BABED8" })}"> revert</span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">}</span></span></code></pre></div><h2 id="理解层叠" tabindex="-1">理解层叠 <a class="header-anchor" href="#理解层叠" aria-label="Permalink to &quot;理解层叠&quot;">​</a></h2><p>层叠应用规则有三个要素需要考虑，根据重要性排序如下，后面的更重要：</p><ol><li>资源顺序</li><li>优先级</li><li>重要程度</li></ol><h3 id="资源顺序" tabindex="-1">资源顺序 <a class="header-anchor" href="#资源顺序" aria-label="Permalink to &quot;资源顺序&quot;">​</a></h3><p>当有超过一条规则，且都是相同的权重时，那么后面的规则将会应用</p><h3 id="优先级-1" tabindex="-1">优先级 <a class="header-anchor" href="#优先级-1" aria-label="Permalink to &quot;优先级&quot;">​</a></h3><p>不同类型的选择器有不同的分值，把这些分值相加就得到特定选择器的权重，然后就可以进行匹配</p><p>优先级算法：</p><p>一个选择器的优先级由三个不同的值（或分量）相加，可以认为是百、十、个，如：100（或 1-0-0）。</p><p>三位数的三个位数含义分别是：</p><ul><li>ID：选择器中包含 ID 的个数为百位的分数</li><li>类：选择器中包含类选择器、属性选择器或者伪类的个数为十位的分数</li><li>元素：选择器中包含元素、伪元素选择器的个数为个位的分数</li></ul><blockquote><p>通用选择器（ <code>*</code> ）、组合符（<code>+</code>、<code>&gt;</code>、<code>~</code>、<code>&#39;&#39;</code>）和调整优先级的选择器（<code>:where()</code>）不会影响优先级。</p></blockquote><p>否定（<code>:not()</code>）和任意匹配（<code>:is()</code>）伪类本身对优先级没有影响，但它们的参数则会带来影响。参数中对优先级算法有贡献的参数的优先级的最大值将作为改伪类选择器的优先级。</p><p>例：</p><table><thead><tr><th>选择器</th><th>ID</th><th>类</th><th>元素</th><th>优先级</th></tr></thead><tbody><tr><td><code>h1</code></td><td>0</td><td>0</td><td>1</td><td>0-0-1</td></tr><tr><td><code>h1 + p::first-letter</code></td><td>0</td><td>0</td><td>3</td><td>0-0-3</td></tr><tr><td><code>li &gt; a[href*=&quot;en-US&quot;] &gt; .inline-warning</code></td><td>0</td><td>2</td><td>2</td><td>0-2-2</td></tr><tr><td><code>#identifier</code></td><td>1</td><td>0</td><td>0</td><td>1-0-0</td></tr><tr><td><code>button:not(#mainBtn, .cta)</code></td><td>1</td><td>0</td><td>1</td><td>1-0-1</td></tr></tbody></table><h3 id="内联样式" tabindex="-1">内联样式 <a class="header-anchor" href="#内联样式" aria-label="Permalink to &quot;内联样式&quot;">​</a></h3><p>内联样式（即行内样式）优先级高于所有普通样式，可以理解为 1-0-0-0</p><h3 id="important" tabindex="-1">!important <a class="header-anchor" href="#important" aria-label="Permalink to &quot;!important&quot;">​</a></h3><p><code>!important</code> 可以覆盖所有上面的优先级计算包括内联样式，</p><p>除了非常情况不应该使用 <code>!important</code></p><h2 id="css-位置的影响" tabindex="-1">CSS 位置的影响 <a class="header-anchor" href="#css-位置的影响" aria-label="Permalink to &quot;CSS 位置的影响&quot;">​</a></h2><p>CSS 声明的优先级取决于定义它的样式表和级联层</p><h3 id="覆盖声明的顺序" tabindex="-1">覆盖声明的顺序： <a class="header-anchor" href="#覆盖声明的顺序" aria-label="Permalink to &quot;覆盖声明的顺序：&quot;">​</a></h3><p>相互冲突的声明按一下顺序应用，后一种会覆盖前一种：</p><ul><li>用户代理样式中的声明（浏览器器默认样式）</li><li>用户样式表中的常规声明（由用户设置的自定义样式）</li><li>作者样式表中的常规声明（web 开发人员设置的样式）</li><li>作者样式表中的 <code>!import</code> 声明</li><li>用户样式表中的 <code>!import</code> 声明</li><li>用户代理样式表中的 <code>!import</code> 声明</li></ul><h2 id="级联层的顺序" tabindex="-1">级联层的顺序 <a class="header-anchor" href="#级联层的顺序" aria-label="Permalink to &quot;级联层的顺序&quot;">​</a></h2><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/@layer" target="_blank" rel="noreferrer">@layer</a> 级联层属于高级的主题，并不常用。</p><p>在级联层中声明 CSS 优先级是由层的生命顺序来决定的，在任何层外声明的 CSS 样式会被按声明的顺序组合在一起，形成一个未命名的层，这个层会被放在所有命名层的后面。</p><p>对于存在冲突的样式，后面的层会覆盖先定义的层。但对于 <code>!import</code> 标记的样式，顺序相反——先前层中的 <code>!import</code> 比后面层中的 <code>!import</code> 优先级高。</p><p><a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS/Building_blocks/Cascade_and_inheritance#%E7%BA%A7%E8%81%94%E5%B1%82%E7%9A%84%E9%A1%BA%E5%BA%8F" target="_blank" rel="noreferrer">级联层顺序 demo</a></p><p><img${ssrRenderAttr("src", _imports_1)} alt="Alt text"></p><div class="language-CSS"><button title="Copy Code" class="copy"></button><span class="lang">CSS</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#89DDFF", "font-style": "italic" })}">@layer</span><span style="${ssrRenderStyle({ "color": "#BABED8" })}">  secondLayer,firstLayer</span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">;</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#FFCB6B" })}">p</span><span style="${ssrRenderStyle({ "color": "#BABED8" })}"> </span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">{</span><span style="${ssrRenderStyle({ "color": "#BABED8" })}"> </span><span style="${ssrRenderStyle({ "color": "#676E95", "font-style": "italic" })}">/* 0-0-1 */</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#BABED8" })}">  </span><span style="${ssrRenderStyle({ "color": "#B2CCD6" })}">background-color</span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">:</span><span style="${ssrRenderStyle({ "color": "#BABED8" })}"> red</span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#BABED8" })}">  </span><span style="${ssrRenderStyle({ "color": "#B2CCD6" })}">color</span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">:</span><span style="${ssrRenderStyle({ "color": "#BABED8" })}"> grey </span><span style="${ssrRenderStyle({ "color": "#F78C6C" })}">!important</span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#BABED8" })}">  </span><span style="${ssrRenderStyle({ "color": "#B2CCD6" })}">border</span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">:</span><span style="${ssrRenderStyle({ "color": "#BABED8" })}"> </span><span style="${ssrRenderStyle({ "color": "#F78C6C" })}">5px</span><span style="${ssrRenderStyle({ "color": "#BABED8" })}"> inset purple</span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">}</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#FFCB6B" })}">p</span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">#</span><span style="${ssrRenderStyle({ "color": "#F78C6C" })}">addSpecificity</span><span style="${ssrRenderStyle({ "color": "#BABED8" })}"> </span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">{</span><span style="${ssrRenderStyle({ "color": "#BABED8" })}"> </span><span style="${ssrRenderStyle({ "color": "#676E95", "font-style": "italic" })}">/* 1-0-1 */</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#BABED8" })}">  </span><span style="${ssrRenderStyle({ "color": "#B2CCD6" })}">border-style</span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">:</span><span style="${ssrRenderStyle({ "color": "#BABED8" })}"> solid </span><span style="${ssrRenderStyle({ "color": "#F78C6C" })}">!important</span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">}</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#89DDFF", "font-style": "italic" })}">@layer</span><span style="${ssrRenderStyle({ "color": "#BABED8" })}"> firstLayer </span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">{</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#BABED8" })}">  </span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">#</span><span style="${ssrRenderStyle({ "color": "#F78C6C" })}">addSpecificity</span><span style="${ssrRenderStyle({ "color": "#BABED8" })}"> </span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">{</span><span style="${ssrRenderStyle({ "color": "#BABED8" })}"> </span><span style="${ssrRenderStyle({ "color": "#676E95", "font-style": "italic" })}">/* 1-0-0 */</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#BABED8" })}">    </span><span style="${ssrRenderStyle({ "color": "#B2CCD6" })}">background-color</span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">:</span><span style="${ssrRenderStyle({ "color": "#BABED8" })}"> blue</span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#BABED8" })}">    </span><span style="${ssrRenderStyle({ "color": "#B2CCD6" })}">color</span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">:</span><span style="${ssrRenderStyle({ "color": "#BABED8" })}"> white </span><span style="${ssrRenderStyle({ "color": "#F78C6C" })}">!important</span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#BABED8" })}">    </span><span style="${ssrRenderStyle({ "color": "#B2CCD6" })}">border-width</span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">:</span><span style="${ssrRenderStyle({ "color": "#BABED8" })}"> </span><span style="${ssrRenderStyle({ "color": "#F78C6C" })}">5px</span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#BABED8" })}">    </span><span style="${ssrRenderStyle({ "color": "#B2CCD6" })}">border-style</span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">:</span><span style="${ssrRenderStyle({ "color": "#BABED8" })}"> dashed </span><span style="${ssrRenderStyle({ "color": "#F78C6C" })}">!important</span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#BABED8" })}">  </span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">}</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">}</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#89DDFF", "font-style": "italic" })}">@layer</span><span style="${ssrRenderStyle({ "color": "#BABED8" })}"> secondLayer </span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">{</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#BABED8" })}">  </span><span style="${ssrRenderStyle({ "color": "#FFCB6B" })}">p</span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">#</span><span style="${ssrRenderStyle({ "color": "#F78C6C" })}">addSpecificity</span><span style="${ssrRenderStyle({ "color": "#BABED8" })}"> </span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">{</span><span style="${ssrRenderStyle({ "color": "#BABED8" })}"> </span><span style="${ssrRenderStyle({ "color": "#676E95", "font-style": "italic" })}">/* 1-0-1 */</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#BABED8" })}">    </span><span style="${ssrRenderStyle({ "color": "#B2CCD6" })}">background-color</span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">:</span><span style="${ssrRenderStyle({ "color": "#BABED8" })}"> green</span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#BABED8" })}">    </span><span style="${ssrRenderStyle({ "color": "#B2CCD6" })}">color</span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">:</span><span style="${ssrRenderStyle({ "color": "#BABED8" })}"> orange </span><span style="${ssrRenderStyle({ "color": "#F78C6C" })}">!important</span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#BABED8" })}">    </span><span style="${ssrRenderStyle({ "color": "#B2CCD6" })}">border-width</span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">:</span><span style="${ssrRenderStyle({ "color": "#BABED8" })}"> </span><span style="${ssrRenderStyle({ "color": "#F78C6C" })}">10px</span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#BABED8" })}">    </span><span style="${ssrRenderStyle({ "color": "#B2CCD6" })}">border-style</span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">:</span><span style="${ssrRenderStyle({ "color": "#BABED8" })}"> dotted </span><span style="${ssrRenderStyle({ "color": "#F78C6C" })}">!important</span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#BABED8" })}">  </span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">}</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">}</span></span></code></pre></div><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">&lt;</span><span style="${ssrRenderStyle({ "color": "#F07178" })}">p</span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}"> </span><span style="${ssrRenderStyle({ "color": "#C792EA" })}">id</span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">=</span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">&quot;</span><span style="${ssrRenderStyle({ "color": "#C3E88D" })}">addSpecificity</span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">&quot;</span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">&gt;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#BABED8" })}">  A paragraph with a border and background</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">&lt;/</span><span style="${ssrRenderStyle({ "color": "#F07178" })}">p</span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">&gt;</span></span></code></pre></div></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("blog/notes/CSS基础知识.md");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const CSS____ = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
export {
  __pageData,
  CSS____ as default
};
